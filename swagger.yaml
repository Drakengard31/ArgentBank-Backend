swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error

  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/UserProfileResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: Update User Profile
      description: API for updating user profile information
      parameters:
        - in: body
          name: body
          description: Updated user profile data
          required: true
          schema:
            $ref: '#/definitions/UserProfileUpdate'
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/UserProfileResponse'
        '400':
          description: Invalid Fields
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Get account transactions for current month
      description: Get all transactions for an account for the current month with token authentication
      parameters:
        - name: accountId
          in: path
          required: true
          type: string
          description: Account ID to retrieve transactions for
        - name: month
          in: query
          required: false
          type: integer
          minimum: 1
          maximum: 12
          description: Month for filtering transactions (1-12)
        - name: year
          in: query
          required: false
          type: integer
          description: Year for filtering transactions
      responses:
        '200':
          description: Transactions retrieved successfully
          schema:
            $ref: '#/definitions/TransactionsResponse'
        '401':
          description: Unauthorized - Invalid or missing token
        '404':
          description: Account not found
        '500':
          description: Internal Server Error

  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Get transaction details
      description: Get details for a specific transaction with token authentication
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
          description: Transaction ID to retrieve details for
      responses:
        '200':
          description: Transaction details retrieved successfully
          schema:
            $ref: '#/definitions/TransactionDetails'
        '401':
          description: Unauthorized - Invalid or missing token
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Update transaction details
      description: Update transaction information with token authentication
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
          description: Transaction ID to update
        - in: body
          name: body
          description: Updated transaction data
          required: true
          schema:
            $ref: '#/definitions/TransactionUpdate'
      responses:
        '200':
          description: Transaction updated successfully
          schema:
            $ref: '#/definitions/TransactionDetails'
        '400':
          description: Invalid transaction data
        '401':
          description: Unauthorized - Invalid or missing token
        '404':
          description: Transaction not found
        '500':
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: "JWT Authorization header using the Bearer scheme. Example 'Authorization: Bearer {token}'"

definitions:
  Login:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        description: User email
        example: "user@example.com"
      password:
        type: string
        description: User password
        example: "password123"

  LoginResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "User successfully logged in"
      body:
        type: object
        properties:
          token:
            type: string
            description: JWT authentication token
            example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

  UserProfileResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "User profile retrieved successfully"
      body:
        type: object
        properties:
          id:
            type: string
            example: "12345"
          email:
            type: string
            example: "tony@example.com"
          firstName:
            type: string
            example: "Tony"
          lastName:
            type: string
            example: "Jarvis"
          userName:
            type: string
            example: "tonyj"
          createdAt:
            type: string
            format: date-time
            example: "2024-01-01T00:00:00Z"
          updatedAt:
            type: string
            format: date-time
            example: "2024-01-15T00:00:00Z"

  UserProfileUpdate:
    type: object
    properties:
      userName:
        type: string
        description: Updated username
        example: "newusername"
      firstName:
        type: string
        description: Updated first name
        example: "Anthony"
      lastName:
        type: string
        description: Updated last name
        example: "Stark"

  Account:
    type: object
    properties:
      id:
        type: string
        description: Account unique identifier
        example: "8349"
      type:
        type: string
        description: Account type
        enum:
          - Checking
          - Savings
          - Credit Card
        example: "Checking"
      number:
        type: string
        description: Account number (masked)
        example: "x8349"
      balance:
        type: number
        format: float
        description: Account balance
        example: 2082.79

  TransactionsResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "Transactions retrieved successfully"
      body:
        type: object
        properties:
          accountId:
            type: string
            example: "8349"
          transactions:
            type: array
            items:
              $ref: '#/definitions/Transaction'

  Transaction:
    type: object
    properties:
      id:
        type: string
        example: "tx_123456"
      date:
        type: string
        format: date
        example: "2024-01-15"
      description:
        type: string
        example: "Grocery Store Purchase"
      amount:
        type: number
        format: float
        example: -45.67
      balance:
        type: number
        format: float
        example: 2037.12
      type:
        type: string
        enum:
          - debit
          - credit
        example: "debit"

  TransactionDetails:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "Transaction details retrieved successfully"
      body:
        type: object
        properties:
          id:
            type: string
            example: "tx_123456"
          date:
            type: string
            format: date-time
            example: "2024-01-15T14:30:00Z"
          description:
            type: string
            example: "Grocery Store Purchase"
          amount:
            type: number
            format: float
            example: -45.67
          balance:
            type: number
            format: float
            example: 2037.12
          category:
            type: string
            example: "Food"
          notes:
            type: string
            example: "Weekly grocery shopping"
          type:
            type: string
            enum:
              - debit
              - credit
            example: "debit"

  TransactionUpdate:
    type: object
    properties:
      description:
        type: string
        example: "Updated grocery purchase"
      category:
        type: string
        example: "Food & Dining"
      notes:
        type: string
        example: "Updated notes for this transaction"